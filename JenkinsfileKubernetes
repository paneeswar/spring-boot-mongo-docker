node{
     
    stage('SCM Checkout'){
        git credentialsId: 'GIT_CREDENTIALS', url:  'https://github.com/MithunTechnologiesDevOps/spring-boot-mongo-docker.git',branch: 'master'
    }
    
    stage(" Maven Clean Package"){
      def mavenHome =  tool name: "Maven-3.6.1", type: "maven"
      def mavenCMD = "${mavenHome}/bin/mvn"
      sh "${mavenCMD} clean package"
      
    } 
    
    
    stage('Build Docker Image'){
        sh 'docker build -t paneeswar/spring-boot-mongo .'
    }
    
    stage('Push Docker Image'){
          withCredentials([usernamePassword(credentialsId: 'Dokcer_Hub_Credentails', passwordVariable: 'password', usernameVariable: 'username')]) {
          sh "docker login -u ${username} -p ${password}"
        }
        sh 'docker push paneeswar/spring-boot-mongo'
     }
     
     /**stage("Deploy To Kuberates Cluster"){
       kubernetesDeploy(
         configs: 'springBootMongo.yml', 
         kubeconfigId: 'KUBERNATES_CONFIG',
         enableConfigSubstitution: true
        )
     }**/
	 
	  
      stage("Deploy To Kuberates Cluster"){
      sshagent(['kuber']) {
        sh 'ssh -o StrictHostKeyChecking=no ubuntu@13.233.131.254'
        sh 'scp -o StrictHostKeyChecking=no  springBootMongo.yml ubuntu@13.233.131.254:'
        sh 'kubectl apply -f springBootMongo.yml'
      } 
     
}
}

